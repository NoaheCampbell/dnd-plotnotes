generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model campaigns {
  id             Int        @id @default(autoincrement())
  title          String
  description    String?
  image_url      String?
  progress       Int?       @default(0)
  sessions_count Int?       @default(0)
  players_count  Int?       @default(0)
  last_played    DateTime?  @db.Timestamp(6)
  created_at     DateTime   @default(now()) @db.Timestamp(6)
  active         Boolean    @default(true)
  notes          notes[]
  npcs           npcs[]
  sessions       sessions[]
}

model notes {
  id          Int        @id @default(autoincrement())
  campaign_id Int?
  title       String
  content     String?
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  campaigns   campaigns? @relation(fields: [campaign_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model npcs {
  id          Int        @id @default(autoincrement())
  campaign_id Int?
  name        String
  type        String?
  description String?
  campaigns   campaigns? @relation(fields: [campaign_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model sessions {
  id          Int        @id @default(autoincrement())
  campaign_id Int?
  date        DateTime   @db.Timestamp(6)
  location    String?
  notes       String?
  campaigns   campaigns? @relation(fields: [campaign_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model locations {
  id          Int      @id @default(autoincrement())
  name        String
  type        String?
  description String?
  map_url     String?
}

model items {
  id        Int      @id @default(autoincrement())
  name      String
  type      String?
  rarity    String?
  campaign  String?
  image_url String?
}
